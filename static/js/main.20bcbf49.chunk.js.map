{"version":3,"sources":["assets/react-logo.svg","store/initialState.js","utils/generateRandomInteger.js","reducers/preloadedStateReducer.js","constants/actionTypes.js","constants/nationalities.js","utils/checkAvailability.js","reducers/contactsPageReducer.js","reducers/rootReducer.js","store/store.js","actions/createAction.js","actions/signInForm.js","components/logo/Logo.jsx","components/logo/logoContainer.js","components/navbar/Navbar.jsx","components/navbar/navbarContainer.js","actions/userProfile.js","components/user/UserProfileHeaderBlock.jsx","components/user/userProfileHeaderBlockContainer.js","components/header/Header.jsx","components/header/headerContainer.js","actions/contactsPage.js","components/forms/SignInForm.jsx","components/forms/signInFormContainer.js","components/footer/Footer.jsx","pages/home/HomePage.jsx","components/image/AppImage.jsx","utils/generateKey.js","components/nationality-tag/NationalityTag.jsx","components/user/UserProfile.jsx","components/user/userProfileContainer.js","pages/user-profile/UserProfilePage.jsx","utils/getWindowDimensions.js","hooks/useWindowDimensions.js","components/forms/ContactsSearchFilterForm.jsx","components/forms/contactsSearchFilterFormContainer.js","components/contacts-views/TableView.jsx","components/contact-card/ContactCard.jsx","components/contacts-views/TiledView.jsx","components/statistic/StatisticBlock.jsx","pages/contacts/ContactsPage.jsx","pages/contacts/contactsPageContainer.js","pages/contact-profile/ContactProfilePage.jsx","pages/contact-profile/contactProfilePageContainer.js","pages/page-404/Page404.jsx","pages/page-404/page404Container.js","layouts/base/BaseAppLayout.jsx","serviceWorker.js","index.js"],"names":["module","exports","initialState","preloadedState","isSignInFormShowed","isUserSignedIn","localStorage","getItem","isLoading","isLoadingFail","user","JSON","parse","userEmail","userPassword","contacts","isTableView","isTiledView","contactsCollection","collectionLength","males","females","indeterminate","contactsPerPage","defaultCurrentPage","currentPage","isContactProfileLoading","isContactFilterClearDisabled","generateRandomIntegerInRange","min","max","Math","floor","random","preloadedStateReducer","state","action","type","setItem","stringify","payload","email","password","userData","clear","NATIONALITIES","AU","name","color","BR","CA","CH","DE","DK","ES","FI","FR","GB","IE","IR","NO","NL","NZ","TR","US","isSomeAvailable","arr","val","some","arrVal","contactsPageReducer","contactsData","collection","length","malesAmount","filter","contact","gender","femalesAmount","indeterminateAmount","currentPageNumber","pageSize","serarchNameValue","filteredByNameCollection","map","Object","values","value","toLowerCase","includes","push","pickedNationalities","nationalities","nationalitiesCollection","keys","nationality","item","nat","forEach","element","createRootReducer","history","combineReducers","router","connectRouter","form","formReducer","createBrowserHistory","composedEnhancers","compose","applyMiddleware","routerMiddleware","logger","thunk","store","createStore","createAction","argNames","actionCreator","args","arg","index","showSignInForm","hideSignInForm","switchToUserProfile","userDataLoading","userDataLoadingFail","fetchUser","dispatch","getState","signInForm","url","fetch","then","response","ok","json","results","catch","Logo","isUserLoggedOut","logo","classNames","src","reactLogo","alt","className","to","LogoContainer","connect","Navbar","navbar","navbarList","key","exact","activeStyle","cursor","NavbarContainer","logout","goHome","UserProfileHeaderBlock","isUserDataLoading","goHomePage","userProfileHeaderBlock","userProfileHeaderBlockButton","userAvatar","userProfileMenu","userProfileMenuText","Text","Typography","menu","Item","icon","UserOutlined","style","margin","LogoutOutlined","onClick","message","success","login","uuid","overlay","verticalAlign","ellipsis","title","first","last","DownOutlined","picture","thumbnail","width","height","defaultProps","UserProfileHeaderBlockContainer","Header","handleSignIn","isSignedIn","header","headerLogo","headerNavMenu","headerProfile","htmlType","LoginOutlined","HeaderContainer","setTiledView","setTableView","contactsLoading","getContactsSuccess","paginate","filterByGender","filterByNationality","filterByName","clearFiltersForm","handleErrors","Error","statusText","fetchContacts","numberOfContacts","urlContacts","emailRequired","undefined","passwordRequired","test","minLength8","SignInForm","handleFormSubmit","handleFormClose","submitting","invalid","switchToProfile","handleFetchContacts","isVisible","useState","passwordShown","setPasswordShown","togglePasswordVisiblity","eyeVisible","EyeOutlined","eyeInvisible","EyeInvisibleOutlined","centered","visible","closable","footer","onSubmit","e","preventDefault","marginBottom","Field","component","TextField","size","placeholder","prefix","validate","visibilityToggle","LockOutlined","suffix","disabled","danger","CloseOutlined","selector","formValueSelector","reduxForm","SignInFormContainer","Footer","HomePage","Content","Layout","AppImage","imageClasses","generateKey","toString","substr","NationalityTag","userNationality","tagName","tagColor","UserProfile","isUserDataLoadingFail","attemptUserUpdate","Title","userProfile","userProfileBody","userProfileImage","userProfileInfo","userContactsList","userContactsItem","userProfileSecondaryColor","showIcon","onClose","level","fontSize","medium","paddingLeft","dob","age","dashed","copyable","text","paddingRight","href","phone","location","country","street","number","city","postcode","strong","coordinates","latitude","longitude","timezone","offset","description","username","salt","md5","sha1","sha256","date","registered","cell","id","large","UserProfileContainer","UserProfilePage","getWindowDimensions","window","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","ContactsSearchFilterForm","nameFilter","genderFilter","nationalityFilter","handleClearForm","Option","Select","queryValue","setQueryValue","nameQuery","timer","setTimeout","clearTimeout","layout","Search","allowClear","onChange","target","genderValue","mode","nationalityValue","nationalityName","marginLeft","ContactsSearchFilterFormContainer","nameValue","TableView","useRouteMatch","columns","dataIndex","render","avatar","sorter","a","b","fullName","localeCompare","align","data","birthday","dataSource","pagination","boxShadow","scroll","x","ContactCard","contactCardImage","contactCardTitle","contactCardTitleSecondary","contactCardEmail","contactCardPhone","contactCardLocationCountry","contactCardLocation","contactCardNationality","Link","contactCard","contactCardPicture","contactCardContactsList","contactCardContactsItem","contactCardSecondaryColor","hoverable","textAlign","rows","TiledView","StatisticBlock","gutter","justify","nationalityAmount","span","ContactsPage","handleTiledView","handleTabularView","collectionSize","handlePaginate","serviceContainer","viewSwitcherButton","indexOfLastContact","indexOfFirstContact","currentContacts","slice","shape","ReloadOutlined","marginRight","loading","AppstoreOutlined","BarsOutlined","backgroundColor","padding","active","mark","defaultCurrent","total","defaultPageSize","showSizeChanger","contactsAmount","ContactsPageContainer","ContactProfilePage","handleClick","contactProfilePage","contactProfileBody","contactProfileImage","contactProfileInfo","contactContactsList","contactContactsItem","contactProfile","params","contactId","DoubleLeftOutlined","marginTop","ContactProfilePageContainer","Page404","page404","fontWeight","Page404Container","BaseAppLayout","basename","path","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.20bcbf49.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react-logo.c33873b0.svg\";","const initialState = {\n  preloadedState: {\n    isSignInFormShowed: false,\n    isUserSignedIn: !!localStorage.getItem('user'),\n    isLoading: false,\n    isLoadingFail: false,\n    user: JSON.parse(localStorage.getItem('user')) || {},\n    userEmail: '',\n    userPassword: '',\n  },\n  contacts: {\n    isTableView: true,\n    isTiledView: false,\n    isLoading: false,\n    contactsCollection: JSON.parse(localStorage.getItem('contactsCollection')) || [],\n    collectionLength: JSON.parse(localStorage.getItem('collectionLength')) || 0,\n    males: JSON.parse(localStorage.getItem('malesAmount')) || 0,\n    females: JSON.parse(localStorage.getItem('femalesAmount')) || 0,\n    indeterminate: JSON.parse(localStorage.getItem('indeterminateAmount')) || 0,\n    contactsPerPage: 10,\n    defaultCurrentPage: 1,\n    currentPage: 1,\n    isContactProfileLoading: false,\n    isContactFilterClearDisabled: true,\n  },\n};\n\nexport default initialState;\n","const generateRandomIntegerInRange = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\nexport default generateRandomIntegerInRange;\n","import initialState from '../store/initialState';\nimport generateRandomIntegerInRange from '../utils/generateRandomInteger';\nimport {\n  SHOW_SIGN_IN_FORM,\n  HIDE_SIGN_IN_FORM,\n  GET_USER, GET_USER_AUTH_DATA,\n  SWITCH_TO_USER_PROFILE,\n  USER_DATA_LOADING,\n  USER_DATA_LOADING_FAIL,\n  LOGOUT,\n} from '../constants/actionTypes';\n\nfunction preloadedStateReducer(state = initialState, action) {\n  switch (action.type) {\n    case SHOW_SIGN_IN_FORM:\n    {\n      return {\n        ...state,\n        isSignInFormShowed: true,\n      };\n    }\n\n    case HIDE_SIGN_IN_FORM:\n    {\n      return {\n        ...state,\n        isSignInFormShowed: false,\n      };\n    }\n\n    case SWITCH_TO_USER_PROFILE:\n    {\n      return {\n        ...state,\n        isSignInFormShowed: false,\n        isUserSignedIn: true,\n      };\n    }\n\n    case USER_DATA_LOADING:\n    {\n      localStorage.setItem('numberOfContacts', JSON.stringify(generateRandomIntegerInRange(1, 200)));\n      return {\n        ...state,\n        isLoading: true,\n        isLoadingFail: false,\n      };\n    }\n\n    case USER_DATA_LOADING_FAIL:\n    {\n      return {\n        ...state,\n        isLoading: false,\n        isLoadingFail: true,\n      };\n    }\n\n    case GET_USER_AUTH_DATA:\n    {\n      return { ...state, userEmail: action.payload.email, userPassword: action.payload.password };\n    }\n\n    case GET_USER:\n    {\n      localStorage.setItem('user', JSON.stringify(action.payload.userData));\n\n      return {\n        ...state,\n        isSignInFormShowed: false,\n        isUserSignedIn: true,\n        user: action.payload.userData,\n        isLoading: false,\n        isLoadingFail: false,\n      };\n    }\n\n    case LOGOUT:\n    {\n      localStorage.clear();\n\n      return {\n        isSignInFormShowed: false,\n        isUserSignedIn: !!localStorage.getItem('user'),\n        user: JSON.parse(localStorage.getItem('user')) || {},\n        userEmail: '',\n        userPassword: '',\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default preloadedStateReducer;\n","export const SHOW_SIGN_IN_FORM = 'SHOW_SIGN_IN_FORM';\nexport const HIDE_SIGN_IN_FORM = 'HIDE_SIGN_IN_FORM';\nexport const GET_USER = 'GET_USER';\nexport const GET_USER_AUTH_DATA = 'GET_USER_AUTH_DATA';\nexport const USER_DATA_LOADING = 'USER_DATA_LOADING';\nexport const USER_DATA_LOADING_FAIL = 'USER_DATA_LOADING_FAIL';\nexport const SWITCH_TO_USER_PROFILE = 'SWITCH_TO_USER_PROFILE';\nexport const LOGOUT = 'LOGOUT';\n\n// Contacts page actions\nexport const SET_TILED_VIEW = 'SET_TILED_VIEW';\nexport const SET_TABLE_VIEW = 'SET_TABLE_VIEW';\nexport const CONTACTS_LOADING = 'CONTACTS_LOADING';\nexport const GET_CONTACTS_SUCCESS = 'GET_CONTACTS_SUCCESS';\nexport const CONTACTS_LOADING_FAIL = 'CONTACTS_LOADING_FAIL';\nexport const PAGINATE = 'PAGINATE';\nexport const GO_TO_CONTACT_PAGE = 'GO_TO_CONTACT_PAGE';\nexport const GET_SELECTED_CONTACT_NUMBER = 'GET_SELECTED_CONTACT_NUMBER';\n\n// Filter actions\nexport const FILTER_BY_GENDER = 'FILTER_BY_GENDER';\nexport const FILTER_BY_NATIONALITY = 'FILTER_BY_NATIONALITY';\nexport const FILTER_BY_NAME = 'FILTER_BY_NAME';\nexport const CLEAR_FILTERS_FORM = 'CLEAR_FILTERS_FORM';\n","const NATIONALITIES = {\n  AU: { name: 'Australian', color: 'magenta' },\n  BR: { name: 'Brazilian', color: 'red' },\n  CA: { name: 'Canadian', color: 'volcano' },\n  CH: { name: 'Swiss', color: 'orange' },\n  DE: { name: 'German', color: 'gold' },\n  DK: { name: 'Danish', color: 'lime' },\n  ES: { name: 'Spanish', color: 'green' },\n  FI: { name: 'Finnish', color: 'cyan' },\n  FR: { name: 'French', color: 'blue' },\n  GB: { name: 'British', color: 'geekblue' },\n  IE: { name: 'Irish', color: 'purple' },\n  IR: { name: 'Iranian', color: '#f50' },\n  NO: { name: 'Norwegian', color: '#2db7f5' },\n  NL: { name: 'Dutch', color: '#87d068' },\n  NZ: { name: 'New Zealander', color: '#9e1068' },\n  TR: { name: 'Turkish', color: '#ffd666' },\n  US: { name: 'American' },\n};\n\nexport default NATIONALITIES;\n","function isSomeAvailable(arr, val) {\n  return arr.some((arrVal) => val === arrVal);\n}\n\nexport default isSomeAvailable;\n","import initialState from '../store/initialState';\nimport {\n  SET_TILED_VIEW,\n  SET_TABLE_VIEW,\n  CONTACTS_LOADING,\n  GET_CONTACTS_SUCCESS,\n  CONTACTS_LOADING_FAIL,\n  PAGINATE,\n  FILTER_BY_NAME,\n  FILTER_BY_GENDER,\n  FILTER_BY_NATIONALITY,\n  CLEAR_FILTERS_FORM,\n  LOGOUT,\n} from '../constants/actionTypes';\n\nimport NATIONALITIES from '../constants/nationalities';\nimport isSomeAvailable from '../utils/checkAvailability';\n\nfunction contactsPageReducer(state = initialState.contacts, action) {\n  switch (action.type) {\n    case SET_TILED_VIEW:\n    {\n      return {\n        ...state,\n        isTiledView: true,\n        isTableView: false,\n      };\n    }\n\n    case SET_TABLE_VIEW:\n    {\n      return {\n        ...state,\n        isTiledView: false,\n        isTableView: true,\n      };\n    }\n\n    case CONTACTS_LOADING:\n    {\n      return {\n        ...state,\n        isLoading: true,\n      };\n    }\n\n    case GET_CONTACTS_SUCCESS:\n    {\n      localStorage.setItem('contactsCollection', JSON.stringify(action.payload.contactsData));\n\n      const collection = JSON.parse(localStorage.getItem('contactsCollection')) || [];\n\n      localStorage.setItem('collectionLength', JSON.stringify(collection.length));\n\n      const males = JSON.parse(localStorage.getItem('contactsCollection')) || [];\n      const malesAmount = males.filter((contact) => contact.gender === 'male').length;\n      localStorage.setItem('malesAmount', JSON.stringify(malesAmount));\n\n      const females = JSON.parse(localStorage.getItem('contactsCollection')) || [];\n      const femalesAmount = females.filter((contact) => contact.gender === 'female').length;\n      localStorage.setItem('femalesAmount', JSON.stringify(femalesAmount));\n\n      const indeterminate = JSON.parse(localStorage.getItem('contactsCollection')) || [];\n      const indeterminateAmount = indeterminate.filter((contact) => contact.gender === 'indeterminate');\n      localStorage.setItem('indeterminateAmount', JSON.stringify(indeterminateAmount));\n\n      return {\n        ...state,\n        contactsCollection: collection,\n        collectionLength: JSON.parse(localStorage.getItem('collectionLength')),\n        males: JSON.parse(localStorage.getItem('malesAmount')),\n        females: JSON.parse(localStorage.getItem('femalesAmount')),\n        indeterminate: JSON.parse(localStorage.getItem('indeterminateAmount')),\n        isLoading: false,\n      };\n    }\n\n    case PAGINATE:\n    {\n      return {\n        ...state,\n        currentPage: action.payload.currentPageNumber,\n        contactsPerPage: action.payload.pageSize,\n      };\n    }\n\n    case FILTER_BY_NAME:\n    {\n      const serarchNameValue = action.payload.name;\n      const collection = JSON.parse(localStorage.getItem('contactsCollection')) || [];\n\n      const filteredByNameCollection = [];\n\n      collection.map((contact) => {\n        const { name } = contact;\n        const nameValue = Object.values(name);\n\n        nameValue.map((value) => {\n          if (value.toLowerCase().includes(serarchNameValue.toLowerCase())) {\n            filteredByNameCollection.push(contact);\n            return filteredByNameCollection;\n          }\n          return [];\n        });\n\n        return filteredByNameCollection;\n      });\n\n      if (!serarchNameValue) {\n        return {\n          ...state,\n          contactsCollection: collection,\n        };\n      }\n\n      return {\n        ...state,\n        contactsCollection: filteredByNameCollection,\n        isContactFilterClearDisabled: false,\n      };\n    }\n\n    case FILTER_BY_GENDER:\n    {\n      const collection = JSON.parse(localStorage.getItem('contactsCollection')) || [];\n\n      if (!action.payload.gender) {\n        return {\n          ...state,\n          contactsCollection: collection,\n        };\n      }\n      return {\n        ...state,\n        contactsCollection: collection.filter((contact) => contact.gender === action.payload.gender),\n        isContactFilterClearDisabled: false,\n      };\n    }\n\n    case FILTER_BY_NATIONALITY:\n    {\n      const pickedNationalities = action.payload.nationalities;\n      const collection = JSON.parse(localStorage.getItem('contactsCollection')) || [];\n\n      const nationalitiesCollection = [];\n\n      Object.keys(NATIONALITIES).map((nationality, item) => {\n        const { name } = Object.values(NATIONALITIES)[item];\n\n        if (isSomeAvailable(pickedNationalities, name)) {\n          const filteredNationalities = collection.filter((contact) => contact.nat === nationality);\n          filteredNationalities.forEach((element) => nationalitiesCollection.push(element));\n          return nationalitiesCollection;\n        }\n        return nationalitiesCollection;\n      });\n\n      return {\n        ...state,\n        contactsCollection: nationalitiesCollection,\n        isContactFilterClearDisabled: false,\n      };\n    }\n\n    case CLEAR_FILTERS_FORM:\n    {\n      const collection = JSON.parse(localStorage.getItem('contactsCollection')) || [];\n\n      return {\n        ...state,\n        contactsCollection: collection,\n        isContactFilterClearDisabled: true,\n      };\n    }\n\n    case LOGOUT:\n    {\n      return {\n        isTableView: true,\n        isTiledView: false,\n        isLoading: false,\n        contactsCollection: [],\n        collectionLength: 0,\n        males: 0,\n        females: 0,\n        indeterminate: 0,\n        contactsPerPage: 10,\n        defaultCurrentPage: 1,\n        currentPage: 1,\n        isContactProfileLoading: false,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default contactsPageReducer;\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport { reducer as formReducer } from 'redux-form';\n\nimport preloadedStateReducer from './preloadedStateReducer';\nimport contactsPageReducer from './contactsPageReducer';\n\nconst createRootReducer = (history) => combineReducers({\n  router: connectRouter(history),\n  preloadedState: preloadedStateReducer,\n  contacts: contactsPageReducer,\n  form: formReducer,\n});\n\nexport default createRootReducer;\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport initialState from './initialState';\nimport createRootReducer from '../reducers/rootReducer';\n\nconst enhancers = [];\n\nexport const history = createBrowserHistory();\n\nconst composedEnhancers = compose(applyMiddleware(routerMiddleware(history), logger, thunk), ...enhancers);\n\nconst store = createStore(createRootReducer(history), initialState, composedEnhancers);\n\nexport default store;\n","function createAction(type, ...argNames) {\n  const actionCreator = (...args) => {\n    const action = {\n      type,\n      payload: {},\n    };\n    argNames.forEach((arg, index) => {\n      action.payload[argNames[index]] = args[index];\n    });\n    return action;\n  };\n  actionCreator.type = type;\n  return actionCreator;\n}\n\nexport default createAction;\n","import { push } from 'connected-react-router';\n\nimport createAction from './createAction';\nimport {\n  SHOW_SIGN_IN_FORM,\n  HIDE_SIGN_IN_FORM,\n  GET_USER, GET_USER_AUTH_DATA,\n  SWITCH_TO_USER_PROFILE,\n  USER_DATA_LOADING,\n  USER_DATA_LOADING_FAIL,\n} from '../constants/actionTypes';\n\nexport const showSignInForm = createAction(SHOW_SIGN_IN_FORM);\nexport const hideSignInForm = createAction(HIDE_SIGN_IN_FORM);\nexport const switchToUserProfile = createAction(SWITCH_TO_USER_PROFILE);\nexport const userDataLoading = createAction(USER_DATA_LOADING);\nexport const userDataLoadingFail = createAction(USER_DATA_LOADING_FAIL);\n\nexport function getUser(userData) {\n  return {\n    type: GET_USER,\n    payload: { userData },\n  };\n}\n\nexport function getUserAuthData(email, password) {\n  return {\n    type: GET_USER_AUTH_DATA,\n    payload: { email, password },\n  };\n}\n\nexport function fetchUser() {\n  return (dispatch, getState) => {\n    const state = getState();\n\n    const { form: { signInForm: { values: { userEmail, userPassword } } } } = state;\n\n    dispatch(userDataLoading());\n    dispatch(getUserAuthData(userEmail, userPassword));\n\n    const url = `https://randomuser.me/api/?seed=${userEmail}`;\n\n    fetch(url)\n      .then((response) => {\n        if (!response.ok) {\n          dispatch(userDataLoadingFail());\n        }\n        return response;\n      })\n      .then((response) => response.json())\n      .then((json) => {\n        dispatch(getUser(json.results));\n        return json;\n      })\n      .then(() => {\n        dispatch(push('/profile'));\n      })\n      .catch(() => { });\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport 'antd/dist/antd.css';\nimport './Logo.css';\nimport reactLogo from '../../assets/react-logo.svg';\n\nfunction Logo({ isUserLoggedOut }) {\n  const logo = classNames('Logo');\n\n  if (isUserLoggedOut) {\n    return (\n      <img src={reactLogo} alt=\"Wezom logo\" className={logo} />\n    );\n  }\n\n  return (\n    <NavLink to=\"/\">\n      <img src={reactLogo} alt=\"Wezom logo\" className={logo} />\n    </NavLink>\n  );\n}\n\nLogo.propTypes = {\n  isUserLoggedOut: PropTypes.bool.isRequired,\n};\n\nexport default Logo;\n","import { connect } from 'react-redux';\nimport Logo from './Logo';\n\nconst mapStateToProps = ({ preloadedState }) => ({\n  isUserLoggedOut: !preloadedState.isUserSignedIn,\n});\n\nconst LogoContainer = connect(mapStateToProps, null)(Logo);\n\nexport default LogoContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport './Navbar.css';\n\nfunction Navbar({ isUserLoggedOut }) {\n  const navbar = classNames('Navbar');\n  const navbarList = classNames('Navbar-list');\n\n  if (isUserLoggedOut) {\n    return (\n      <nav className={navbar}>\n        <ul className={navbarList}>\n          <li key=\"Home\" className=\"Navbar-item\">\n            <span>Home</span>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n\n  return (\n    <nav className={navbar}>\n      <ul className={navbarList}>\n        <li key=\"home\" className=\"Navbar-item\">\n          <NavLink\n            exact\n            to=\"/\"\n            activeStyle={{\n              cursor: 'auto',\n              color: '#5a5a5a',\n            }}\n          >\n            Home\n          </NavLink>\n        </li>\n        <li key=\"contacts\" className=\"Navbar-item\">\n          <NavLink\n            exact\n            to=\"/contacts\"\n            activeStyle={{\n              cursor: 'auto',\n              color: '#5a5a5a',\n            }}\n          >\n            Contacts\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nNavbar.propTypes = {\n  isUserLoggedOut: PropTypes.bool.isRequired,\n};\n\nexport default Navbar;\n","import { connect } from 'react-redux';\nimport Navbar from './Navbar';\n\nconst mapStateToProps = ({ preloadedState }) => {\n  return {\n    isUserLoggedOut: !preloadedState.isUserSignedIn,\n  };\n};\n\nconst NavbarContainer = connect(mapStateToProps, null)(Navbar);\n\nexport default NavbarContainer;\n","import { push } from 'connected-react-router';\n\nimport createAction from './createAction';\nimport { LOGOUT } from '../constants/actionTypes';\n\nexport const logout = createAction(LOGOUT);\n\nexport function goHome() {\n  return (dispatch) => {\n    dispatch(push('/'));\n  };\n}\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport {\n  Avatar,\n  Menu,\n  Dropdown,\n  Button,\n  Divider,\n  Typography,\n  Spin,\n  message,\n} from 'antd';\nimport { DownOutlined, UserOutlined, LogoutOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\n\nimport 'antd/dist/antd.css';\nimport './UserProfileHeaderBlock.css';\n\nfunction UserProfileHeaderBlock({\n  isUserDataLoading,\n  logout,\n  goHomePage,\n  userData,\n}) {\n  const userProfileHeaderBlock = classNames('UserProfileHeaderBlock');\n  const userProfileHeaderBlockButton = classNames('UserProfileHeaderBlock-button');\n  const userAvatar = classNames('UserProfileHeaderBlock-avatar');\n  const userProfileMenu = classNames('UserProfileHeaderBlock-menu');\n  const userProfileMenuText = classNames('UserProfileHeaderBlock-menuText');\n\n  const success = () => {\n    message.success('Successfully logged out');\n  };\n\n  const handleLogout = () => {\n    logout();\n    goHomePage();\n    success();\n  };\n  const { Text } = Typography;\n\n  const menu = (\n    <Menu className={userProfileMenu}>\n      <Menu.Item key=\"1\" icon={<UserOutlined />}>\n        <NavLink to=\"/profile\">Profile</NavLink>\n      </Menu.Item>\n      <Divider style={{ margin: '0' }} />\n      <Menu.Item key=\"2\" icon={<LogoutOutlined />} onClick={handleLogout}>\n        Logout\n      </Menu.Item>\n    </Menu>\n  );\n\n  if (isUserDataLoading) {\n    return (\n      <Spin />\n    );\n  }\n\n  return (\n    <div className={userProfileHeaderBlock}>\n      {userData.map((user) => (\n        <Fragment key={user.login.uuid}>\n          <Dropdown overlay={menu}>\n            <Button type=\"link\" className={userProfileHeaderBlockButton}>\n              <Text className={userProfileMenuText} style={{ verticalAlign: 'middle' }} ellipsis>\n                {`Hello! ${user.name.title}. ${user.name.first} ${user.name.last}`}\n              </Text>\n              <DownOutlined className={userProfileMenuText} />\n              <Avatar\n                className={userAvatar}\n                src={user.picture.thumbnail}\n                style={{ width: '46px', height: '46px' }}\n              />\n            </Button>\n          </Dropdown>\n        </Fragment>\n      ))}\n    </div>\n  );\n}\n\nUserProfileHeaderBlock.propTypes = {\n  isUserDataLoading: PropTypes.bool.isRequired,\n  logout: PropTypes.func.isRequired,\n  goHomePage: PropTypes.func.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  userData: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.object,\n  ]),\n};\n\nUserProfileHeaderBlock.defaultProps = {\n  userData: [],\n};\n\nexport default UserProfileHeaderBlock;\n","import { connect } from 'react-redux';\nimport { logout, goHome } from '../../actions/userProfile';\nimport UserProfileHeaderBlock from './UserProfileHeaderBlock';\n\nconst mapStateToProps = ({ preloadedState }) => {\n  const { user, isLoading } = preloadedState;\n\n  return {\n    userData: user,\n    isUserDataLoading: isLoading,\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    logout: () => dispatch(logout()),\n    goHomePage: () => dispatch(goHome()),\n  };\n}\n\nconst UserProfileHeaderBlockContainer = connect(mapStateToProps, mapDispatchToProps)(UserProfileHeaderBlock);\n\nexport default UserProfileHeaderBlockContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Layout, Button } from 'antd';\nimport { LoginOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\n\nimport LogoContainer from '../logo/logoContainer';\nimport NavbarContainer from '../navbar/navbarContainer';\nimport UserProfileHeaderBlockContainer from '../user/userProfileHeaderBlockContainer';\n\nimport 'antd/dist/antd.css';\nimport './Header.css';\n\nfunction Header({ handleSignIn, isSignedIn }) {\n  const header = classNames('Header');\n  const headerLogo = classNames('Header-logo');\n  const headerNavMenu = classNames('Header-navMenu');\n  const headerProfile = classNames('Header-profile');\n\n  return (\n    <>\n      <Layout.Header className={header}>\n\n        <div className={headerLogo}>\n          <LogoContainer />\n        </div>\n\n        <div className={headerNavMenu}>\n          <NavbarContainer />\n        </div>\n\n        <div className={headerProfile}>\n          {!isSignedIn ? (\n            <Button\n              type=\"link\"\n              htmlType=\"button\"\n              icon={(\n                <LoginOutlined />\n              )}\n              onClick={handleSignIn}\n            >\n              Sign In\n            </Button>\n          ) : (\n            <UserProfileHeaderBlockContainer />\n          )}\n        </div>\n\n      </Layout.Header>\n    </>\n  );\n}\n\nHeader.propTypes = {\n  handleSignIn: PropTypes.func.isRequired,\n  isSignedIn: PropTypes.bool,\n};\n\nHeader.defaultProps = {\n  isSignedIn: false,\n};\n\nexport default Header;\n","import { connect } from 'react-redux';\nimport { showSignInForm } from '../../actions/signInForm';\nimport Header from './Header';\n\nconst mapStateToProps = ({ preloadedState }) => ({\n  isSignedIn: preloadedState.isUserSignedIn,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    handleSignIn: () => dispatch(showSignInForm()),\n  };\n}\n\nconst HeaderContainer = connect(mapStateToProps, mapDispatchToProps)(Header);\n\nexport default HeaderContainer;\n","import { push } from 'connected-react-router';\n\nimport createAction from './createAction';\nimport {\n  SET_TILED_VIEW,\n  SET_TABLE_VIEW,\n  CONTACTS_LOADING,\n  GET_CONTACTS_SUCCESS,\n  CONTACTS_LOADING_FAIL,\n  PAGINATE,\n  FILTER_BY_GENDER,\n  FILTER_BY_NATIONALITY,\n  FILTER_BY_NAME,\n  CLEAR_FILTERS_FORM,\n} from '../constants/actionTypes';\n\nexport const setTiledView = createAction(SET_TILED_VIEW);\nexport const setTableView = createAction(SET_TABLE_VIEW);\nexport const contactsLoading = createAction(CONTACTS_LOADING);\nexport const getContactsSuccess = createAction(GET_CONTACTS_SUCCESS, 'contactsData');\nexport const contactsLoadingFail = createAction(CONTACTS_LOADING_FAIL);\nexport const paginate = createAction(PAGINATE, 'currentPageNumber', 'pageSize');\nexport const filterByGender = createAction(FILTER_BY_GENDER, 'gender');\nexport const filterByNationality = createAction(FILTER_BY_NATIONALITY, 'nationalities');\nexport const filterByName = createAction(FILTER_BY_NAME, 'name');\nexport const clearFiltersForm = createAction(CLEAR_FILTERS_FORM);\n\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n}\n\nexport function fetchContacts() {\n  return (dispatch) => {\n    const numberOfContacts = JSON.parse(localStorage.getItem('numberOfContacts'));\n\n    dispatch(contactsLoading());\n\n    const urlContacts = `https://randomuser.me/api/?results=${numberOfContacts}`;\n\n    fetch(urlContacts)\n      .then(handleErrors)\n      .then((response) => response.json())\n      .then((json) => {\n        dispatch(getContactsSuccess(json.results));\n        return json;\n      })\n      .catch(() => { });\n  };\n}\n\nexport function backToContacts() {\n  return (dispatch) => {\n    dispatch(push('/contacts'));\n  };\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { reduxForm, Field, formValueSelector } from 'redux-form';\nimport { TextField } from 'redux-form-antd';\nimport { Modal, Button } from 'antd';\nimport {\n  CloseOutlined, LockOutlined, UserOutlined, EyeOutlined, EyeInvisibleOutlined,\n} from '@ant-design/icons';\n\nconst emailRequired = (value) => (value || typeof value === 'number' ? undefined : 'The email field is required.');\nconst passwordRequired = (value) => (value || typeof value === 'number' ? undefined : 'The password field is required.');\nconst email = (value) => (value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\n  ? 'The email format is invalid.'\n  : undefined);\nconst minLength = (min) => (value) => (value && value.length < min ? `The password must be at least ${min} characters.` : undefined);\nconst minLength8 = minLength(8);\n\nlet SignInForm = ({\n  handleFormSubmit,\n  handleFormClose,\n  submitting,\n  invalid,\n  switchToProfile,\n  handleFetchContacts,\n  isVisible,\n}) => {\n  const onClickAction = (e) => {\n    e.preventDefault();\n    handleFormSubmit(e);\n    switchToProfile();\n    handleFetchContacts();\n  };\n\n  const [passwordShown, setPasswordShown] = useState(false);\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(!passwordShown);\n  };\n\n  const eyeVisible = <EyeOutlined onClick={togglePasswordVisiblity} />;\n  const eyeInvisible = <EyeInvisibleOutlined onClick={togglePasswordVisiblity} />;\n\n  return (\n    <Modal\n      title=\"Sign In\"\n      centered\n      visible={isVisible}\n      closable={false}\n      footer={null}\n    >\n      <form onSubmit={onClickAction}>\n        <div style={{ marginBottom: '15px' }}>\n          <Field\n            name=\"userEmail\"\n            type=\"email\"\n            component={TextField}\n            size=\"large\"\n            placeholder=\"Email\"\n            prefix={<UserOutlined />}\n            validate={[emailRequired, email]}\n          />\n        </div>\n        <div style={{ marginBottom: '15px' }}>\n          <Field\n            name=\"userPassword\"\n            type={passwordShown ? 'text' : 'password'}\n            placeholder=\"Password\"\n            component={TextField}\n            visibilityToggle\n            size=\"large\"\n            prefix={<LockOutlined />}\n            suffix={passwordShown ? eyeVisible : eyeInvisible}\n            validate={[passwordRequired, minLength8]}\n          />\n        </div>\n\n        <Button\n          key=\"signin\"\n          type=\"primary\"\n          htmlType=\"submit\"\n          disabled={invalid || submitting}\n        >\n          Sign In\n        </Button>\n        <Button\n          key=\"cancel\"\n          type=\"text\"\n          danger\n          icon={<CloseOutlined />}\n          onClick={handleFormClose}\n        >\n          Cancel\n        </Button>\n      </form>\n\n    </Modal>\n  );\n};\n\nSignInForm.propTypes = {\n  handleFormSubmit: PropTypes.func.isRequired,\n  handleFormClose: PropTypes.func.isRequired,\n  switchToProfile: PropTypes.func.isRequired,\n  handleFetchContacts: PropTypes.func.isRequired,\n  submitting: PropTypes.bool.isRequired,\n  invalid: PropTypes.bool.isRequired,\n  isVisible: PropTypes.bool,\n};\n\nSignInForm.defaultProps = {\n  isVisible: false,\n};\n\nconst selector = formValueSelector('signInForm');\n\nSignInForm = connect((state) => {\n  const userEmail = selector(state, 'userEmail');\n  const userPassword = selector(state, 'userPassword');\n\n  return {\n    userEmail,\n    userPassword,\n  };\n})(SignInForm);\n\nexport default reduxForm({\n  form: 'signInForm',\n})(SignInForm);\n","import { connect } from 'react-redux';\nimport { hideSignInForm, fetchUser, switchToUserProfile } from '../../actions/signInForm';\nimport { fetchContacts } from '../../actions/contactsPage';\nimport SignInForm from './SignInForm';\n\nconst mapStateToProps = ({ preloadedState }) => ({\n  isVisible: preloadedState.isSignInFormShowed,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    handleFormSubmit: () => dispatch(fetchUser()),\n    switchToProfile: () => dispatch(switchToUserProfile()),\n    handleFormClose: () => dispatch(hideSignInForm()),\n    handleFetchContacts: () => dispatch(fetchContacts()),\n  };\n}\n\nconst SignInFormContainer = connect(mapStateToProps, mapDispatchToProps)(SignInForm);\n\nexport default SignInFormContainer;\n","import React from 'react';\nimport { Layout } from 'antd';\nimport classNames from 'classnames';\n\nimport './Footer.css';\n\nfunction Footer() {\n  const footer = classNames('Footer');\n\n  return (\n    <Layout.Footer className={footer}>\n      <span>2020 &copy; Random User React-Redux Test</span>\n    </Layout.Footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport { Layout } from 'antd';\n\nimport './HomePage.css';\nimport reactLogo from '../../assets/react-logo.svg';\n\nfunction HomePage() {\n  const { Content } = Layout;\n\n  return (\n    <Content>\n      <div className=\"HomePage\">\n        <img className=\"App-logo\" src={reactLogo} alt=\"React logo\" />\n      </div>\n    </Content>\n  );\n}\n\nexport default HomePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Image } from 'antd';\nimport classNames from 'classnames';\n\nfunction AppImage({ src, className }) {\n  const imageClasses = classNames(className);\n  return (\n    <Image\n      src={src}\n      className={imageClasses}\n    />\n  );\n}\n\nAppImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n\nAppImage.defaultProps = {\n  className: '',\n};\n\nexport default AppImage;\n","function generateKey() {\n  const key = `_${Math.random().toString(16).substr(2, 9)}`;\n  return key;\n}\n\nexport default generateKey;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tag } from 'antd';\n\nimport NATIONALITIES from '../../constants/nationalities';\nimport generateKey from '../../utils/generateKey';\n\nfunction NationalityTag({ userNationality }) {\n  return (\n    <>\n      {\n        Object.keys(NATIONALITIES).map((nationality, item) => {\n          if (nationality === userNationality) {\n            const tagName = Object.values(NATIONALITIES)[item].name;\n            const tagColor = Object.values(NATIONALITIES)[item].color;\n            return <Tag key={generateKey()} color={tagColor}>{tagName}</Tag>;\n          }\n          return null;\n        })\n      }\n    </>\n  );\n}\n\nNationalityTag.propTypes = {\n  userNationality: PropTypes.string.isRequired,\n};\n\nexport default NationalityTag;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Typography, Divider, Spin, Alert,\n} from 'antd';\nimport classNames from 'classnames';\n\nimport AppImage from '../image/AppImage';\nimport NationalityTag from '../nationality-tag/NationalityTag';\n\nimport 'antd/dist/antd.css';\nimport './UserProfile.css';\n\nfunction UserProfile({\n  userData,\n  isUserDataLoading,\n  isUserDataLoadingFail,\n  attemptUserUpdate,\n}) {\n  const { Title, Text } = Typography;\n\n  const userProfile = classNames('UserProfile');\n  const userProfileBody = classNames('UserProfile-body');\n  const userProfileImage = classNames('UserProfile-userImage');\n  const userProfileInfo = classNames('UserProfile-userInfo');\n  const userContactsList = classNames('UserProfile-userContactsList');\n  const userContactsItem = classNames('UserProfile-userContactsItem');\n  const userProfileSecondaryColor = classNames('UserProfile--secondaryColor');\n\n  const handleAlertClose = () => {\n    attemptUserUpdate();\n  };\n\n  if (isUserDataLoading) {\n    return <Spin size=\"large\" />;\n  }\n\n  if (isUserDataLoadingFail) {\n    return (\n      <Alert\n        type=\"error\"\n        message=\"Something went wrong. Please try again later\"\n        showIcon\n        closable\n        onClose={handleAlertClose}\n      />\n    );\n  }\n\n  return (\n    <div className={userProfile}>\n      <Title level={1} style={{ fontSize: '32px' }}>Profile</Title>\n      <div className={userProfileBody}>\n\n        {userData.map((user) => (\n          <Fragment key={user.login.uuid}>\n            <AppImage className={userProfileImage} src={user.picture.medium} />\n            <div className={userProfileInfo}>\n              <Title level={3}>\n                {`${user.name.title}. ${user.name.first} ${user.name.last}`}\n                <Text\n                  type=\"secondary\"\n                  style={{ fontSize: '19px', paddingLeft: '5px' }}\n                >\n                  {`(${user.dob.age} years)`}\n                </Text>\n              </Title>\n              <Divider dashed style={{ margin: '12px 0' }} />\n\n              <ul className={userContactsList}>\n                <li className={userContactsItem}>\n                  <Text copyable={{ text: user.email }} style={{ paddingRight: '8px' }} />\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </li>\n                <li className={userContactsItem}>\n                  <Text copyable={{ text: user.phone }} style={{ paddingRight: '8px' }} />\n                  <a href={`tel:${user.phone}`}>{user.phone}</a>\n                </li>\n                <li className={userContactsItem}>\n                  <Text\n                    copyable={{\n                      text: `[${user.location.country}]\n                             ${user.location.street.number}\n                             ${user.location.street.name},\n                             ${user.location.city},\n                             ${user.location.state}\n                             ${user.location.postcode}`,\n                    }}\n                    style={{ paddingRight: '8px' }}\n                  />\n                  <Text strong className={userProfileSecondaryColor}>{`/${user.location.country}/`}</Text>\n                  <br />\n                  <Text className={userProfileSecondaryColor}>\n                    {`${user.location.street.number}\n                      ${user.location.street.name},\n                      ${user.location.city},\n                      ${user.location.state}\n                      ${user.location.postcode}`}\n                  </Text>\n                </li>\n              </ul>\n\n              <Divider dashed style={{ margin: '12px 0' }} />\n              <NationalityTag userNationality={user.nat} />\n            </div>\n          </Fragment>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nUserProfile.propTypes = {\n  isUserDataLoading: PropTypes.bool,\n  isUserDataLoadingFail: PropTypes.bool,\n  attemptUserUpdate: PropTypes.func,\n  userData: PropTypes.arrayOf(PropTypes.shape({\n    gender: PropTypes.string,\n    name: {\n      title: PropTypes.string,\n      first: PropTypes.string,\n      last: PropTypes.string,\n    },\n    location: {\n      street: {\n        number: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        name: PropTypes.string,\n      },\n      city: PropTypes.string,\n      state: PropTypes.string,\n      postcode: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      coordinates: {\n        latitude: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        longitude: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      },\n      timezone: {\n        offset: PropTypes.string,\n        description: PropTypes.string,\n      },\n    },\n    email: PropTypes.string,\n    login: {\n      uuid: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      username: PropTypes.string,\n      password: PropTypes.string,\n      salt: PropTypes.string,\n      md5: PropTypes.string,\n      sha1: PropTypes.string,\n      sha256: PropTypes.string,\n    },\n    dob: {\n      date: PropTypes.string,\n      age: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    },\n    registered: {\n      date: PropTypes.string,\n      age: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    },\n    phone: PropTypes.string,\n    cell: PropTypes.string,\n    id: {\n      name: PropTypes.string,\n      value: PropTypes.string,\n    },\n    picture: {\n      large: PropTypes.string,\n      medium: PropTypes.string,\n      thumbnail: PropTypes.string,\n    },\n    nat: PropTypes.string,\n  })),\n};\n\nUserProfile.defaultProps = {\n  isUserDataLoading: false,\n  isUserDataLoadingFail: false,\n  attemptUserUpdate: () => { },\n  userData: [\n    {\n      gender: 'male',\n      name: {\n        title: 'mr',\n        first: 'brad',\n        last: 'gibson',\n      },\n      location: {\n        street: { number: 5421, name: 'Avenue Paul Eluard' },\n        city: 'kilcoole',\n        state: 'waterford',\n        postcode: '93027',\n        coordinates: {\n          latitude: '20.9267',\n          longitude: '-7.9310',\n        },\n        timezone: {\n          offset: '-3:30',\n          description: 'Newfoundland',\n        },\n      },\n      email: 'brad.gibson@example.com',\n      login: {\n        uuid: '155e77ee-ba6d-486f-95ce-0e0c0fb4b919',\n        username: 'silverswan131',\n        password: 'firewall',\n        salt: 'TQA1Gz7x',\n        md5: 'dc523cb313b63dfe5be2140b0c05b3bc',\n        sha1: '7a4aa07d1bedcc6bcf4b7f8856643492c191540d',\n        sha256: '74364e96174afa7d17ee52dd2c9c7a4651fe1254f471a78bda0190135dcd3480',\n      },\n      dob: {\n        date: '1993-07-20T09:44:18.674Z',\n        age: 26,\n      },\n      registered: {\n        date: '2002-05-21T10:59:49.966Z',\n        age: 17,\n      },\n      phone: '011-962-7516',\n      cell: '081-454-0666',\n      id: {\n        name: 'PPS',\n        value: '0390511T',\n      },\n      picture: {\n        large: 'https://randomuser.me/api/portraits/men/75.jpg',\n        medium: 'https://randomuser.me/api/portraits/med/men/75.jpg',\n        thumbnail: 'https://randomuser.me/api/portraits/thumb/men/75.jpg',\n      },\n      nat: 'IE',\n    },\n  ],\n};\n\nexport default UserProfile;\n","import { connect } from 'react-redux';\nimport { fetchUser } from '../../actions/signInForm';\nimport UserProfile from './UserProfile';\n\nconst mapStateToProps = ({ preloadedState }) => {\n  const { user, isLoading, isLoadingFail } = preloadedState;\n\n  return {\n    userData: user,\n    isUserDataLoading: isLoading,\n    isUserDataLoadingFail: isLoadingFail,\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    attemptUserUpdate: () => dispatch(fetchUser()),\n  };\n}\n\nconst UserProfileContainer = connect(mapStateToProps, mapDispatchToProps)(UserProfile);\n\nexport default UserProfileContainer;\n","import React from 'react';\nimport { Layout } from 'antd';\n\nimport UserProfileContainer from '../../components/user/userProfileContainer';\n\nfunction UserProfilePage() {\n  const { Content } = Layout;\n\n  return (\n    <Content>\n      <UserProfileContainer />\n    </Content>\n  );\n}\n\nexport default UserProfilePage;\n","function getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport default getWindowDimensions;\n","import { useState, useEffect } from 'react';\nimport getWindowDimensions from '../utils/getWindowDimensions';\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nexport default useWindowDimensions;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  Input,\n  Select,\n  Checkbox,\n  Button,\n} from 'antd';\nimport { CloseOutlined } from '@ant-design/icons';\n\nimport NATIONALITIES from '../../constants/nationalities';\nimport useWindowDimensions from '../../hooks/useWindowDimensions';\n\nfunction ContactsSearchFilterForm({\n  nameFilter, genderFilter, nationalityFilter, isContactFilterClearDisabled, handleClearForm,\n}) {\n  const { Option } = Select;\n\n  const [queryValue, setQueryValue] = useState('');\n  const nameQuery = queryValue;\n\n  useEffect(() => {\n    const timer = setTimeout(() => nameFilter(nameQuery), 500);\n    return () => clearTimeout(timer);\n  }, [nameQuery]);\n\n  const handleGenderFilter = (genderValue) => {\n    genderFilter(genderValue);\n  };\n\n  const handleNationalityFilter = (nationalityValue) => {\n    nationalityFilter(nationalityValue);\n  };\n\n  const { width } = useWindowDimensions();\n  const mobileViewportBreakpoint = 620;\n\n  return (\n    <Form layout={width >= mobileViewportBreakpoint ? 'inline' : 'vertical'} style={{ width: '100%' }}>\n\n      <Form.Item>\n        <Input.Search\n          placeholder=\"Search by full name\"\n          size=\"large\"\n          allowClear\n          style={{ width: width >= mobileViewportBreakpoint ? 530 : '100%' }}\n          value={queryValue}\n          onChange={(e) => setQueryValue(e.target.value)}\n        />\n      </Form.Item>\n\n      <Form.Item>\n        <Select\n          placeholder=\"Gender\"\n          size=\"large\"\n          allowClear\n          style={{ width: width >= mobileViewportBreakpoint ? 195 : '100%' }}\n          onChange={handleGenderFilter}\n        >\n          <Option value=\"male\">Male</Option>\n          <Option value=\"female\">Female</Option>\n          <Option value=\"indeterminate\">Indeterminate</Option>\n        </Select>\n      </Form.Item>\n\n      <Form.Item>\n        <Select\n          placeholder=\"Nationality\"\n          mode=\"tags\"\n          size=\"large\"\n          style={{ width: width >= mobileViewportBreakpoint ? 245 : '100%' }}\n          onChange={handleNationalityFilter}\n        >\n          {Object.keys(NATIONALITIES).map((nat, item) => {\n            const nationalityName = Object.values(NATIONALITIES)[item].name;\n            return <Option key={nationalityName} value={nationalityName}>{nationalityName}</Option>;\n          })}\n        </Select>\n      </Form.Item>\n\n      <Form.Item>\n        <Checkbox>I am creator</Checkbox>\n      </Form.Item>\n\n      <Form.Item>\n        <Button\n          key=\"cancel\"\n          type=\"link\"\n          icon={<CloseOutlined />}\n          style={{ marginLeft: '10px' }}\n          disabled={isContactFilterClearDisabled}\n          onClick={handleClearForm}\n        >\n          Clear\n        </Button>\n      </Form.Item>\n\n    </Form>\n  );\n}\n\nContactsSearchFilterForm.propTypes = {\n  nameFilter: PropTypes.func.isRequired,\n  genderFilter: PropTypes.func.isRequired,\n  nationalityFilter: PropTypes.func.isRequired,\n  handleClearForm: PropTypes.func.isRequired,\n  isContactFilterClearDisabled: PropTypes.bool,\n};\n\nContactsSearchFilterForm.defaultProps = {\n  isContactFilterClearDisabled: true,\n};\n\nexport default ContactsSearchFilterForm;\n","import { connect } from 'react-redux';\nimport {\n  filterByGender,\n  filterByNationality,\n  filterByName,\n  clearFiltersForm,\n} from '../../actions/contactsPage';\nimport ContactsSearchFilterForm from './ContactsSearchFilterForm';\n\nfunction mapStateToProps({ contacts }) {\n  const { isContactFilterClearDisabled } = contacts;\n  return {\n    isContactFilterClearDisabled,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    genderFilter: (genderValue) => dispatch(filterByGender(genderValue)),\n    nationalityFilter: (nationalityValue) => dispatch(filterByNationality(nationalityValue)),\n    nameFilter: (nameValue) => dispatch(filterByName(nameValue)),\n    handleClearForm: () => dispatch(clearFiltersForm()),\n  };\n}\n\nconst ContactsSearchFilterFormContainer = connect(mapStateToProps, mapDispatchToProps)(ContactsSearchFilterForm);\n\nexport default ContactsSearchFilterFormContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink, useRouteMatch } from 'react-router-dom';\nimport {\n  Table, Avatar, Typography, Spin,\n} from 'antd';\nimport NationalityTag from '../nationality-tag/NationalityTag';\n\nfunction TableView({ contactsCollection, isLoading }) {\n  const { Text } = Typography;\n\n  const { url } = useRouteMatch();\n\n  const columns = [\n    {\n      title: 'Avatar',\n      dataIndex: 'avatar',\n      key: 'avatar',\n      render: (avatar, key) => (\n        <NavLink\n          url={url}\n          to={`${url}/${key.key}`}\n        >\n          <Avatar src={avatar} size=\"large\" />\n        </NavLink>\n      ),\n      width: 80,\n    },\n    {\n      title: 'Full Name',\n      dataIndex: 'fullName',\n      key: 'fullName',\n      render: (name, key) => (\n        <NavLink\n          url={url}\n          to={`${url}/${key.key}`}\n        >\n          {name}\n        </NavLink>\n      ),\n      sorter: (a, b) => a.fullName.localeCompare(b.fullName),\n      width: 170,\n    },\n    {\n      title: 'Birthday',\n      dataIndex: 'birthday',\n      key: 'birthday',\n      width: 250,\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email',\n      render: (email) => (\n        <span>\n          <Text copyable={{ text: email }} style={{ paddingRight: '8px' }} />\n          <a href={`mailto:${email}`}>{email}</a>\n        </span>\n      ),\n      ellipsis: true,\n      width: 150,\n    },\n    {\n      title: 'Phone',\n      dataIndex: 'phone',\n      key: 'phone',\n      render: (phone) => (\n        <span>\n          <Text copyable={{ text: phone }} style={{ paddingRight: '8px' }} />\n          <a href={`tel:${phone}`}>{phone}</a>\n        </span>\n      ),\n      ellipsis: true,\n      width: 150,\n    },\n    {\n      title: 'Location',\n      dataIndex: 'location',\n      key: 'location',\n      render: (location) => (\n        <span>\n          <Text copyable={{ text: location }} style={{ paddingRight: '8px' }} />\n          <span>{location}</span>\n        </span>\n      ),\n      width: 250,\n    },\n    {\n      title: 'Nationality',\n      dataIndex: 'nationality',\n      key: 'nationality',\n      render: (nationality) => (<NationalityTag userNationality={nationality} />),\n      align: 'right',\n      width: 170,\n    },\n  ];\n\n  const data = contactsCollection.map((contact, item) => ({\n    key: item + 1,\n    avatar: contact.picture.thumbnail,\n    fullName: `${contact.name.title}. ${contact.name.first} ${contact.name.last}`,\n    birthday: `${contact.dob.date} ${contact.dob.age} years`,\n    email: contact.email,\n    phone: contact.phone,\n    location: `/${contact.location.country}/\n                ${contact.location.street.number}\n                ${contact.location.street.name},\n                ${contact.location.city},\n                ${contact.location.state}\n                ${contact.location.postcode}`,\n    nationality: contact.nat,\n  }));\n\n  if (isLoading) {\n    return (\n      <Spin />\n    );\n  }\n\n  return (\n    <Table\n      columns={columns}\n      dataSource={data}\n      pagination={false}\n      style={{ marginBottom: 15, boxShadow: '0 5px 5px hsla(0,0%,40%,.1' }}\n      scroll={{ x: 320 }}\n    />\n  );\n}\n\nTableView.propTypes = {\n  contactsCollection: PropTypes.arrayOf(PropTypes.object),\n  isLoading: PropTypes.bool.isRequired,\n};\n\nTableView.defaultProps = {\n  contactsCollection: [{}],\n};\n\nexport default TableView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Typography, Divider } from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport AppImage from '../image/AppImage';\nimport NationalityTag from '../nationality-tag/NationalityTag';\n\nimport 'antd/dist/antd.css';\nimport './ContactCard.css';\n\nfunction ContactCard({\n  url,\n  id,\n  contactCardImage,\n  contactCardTitle,\n  contactCardTitleSecondary,\n  contactCardEmail,\n  contactCardPhone,\n  contactCardLocationCountry,\n  contactCardLocation,\n  contactCardNationality,\n}) {\n  const { Text, Link } = Typography;\n\n  const contactCard = classNames('ContactCard');\n  const contactCardPicture = classNames('ContactCard-picture');\n  const contactCardContactsList = classNames('ContactCard-contactsList');\n  const contactCardContactsItem = classNames('ContactCard-contactsItem');\n  const contactCardSecondaryColor = classNames('ContactCard--secondaryColor');\n\n  return (\n\n    <Card\n      className={contactCard}\n      hoverable\n    >\n\n      <NavLink\n        url={url}\n        to={`${url}/${id}`}\n      >\n        <AppImage className={contactCardPicture} src={contactCardImage} />\n        <Link href={`${url}/${id}`} style={{ fontSize: 18, textAlign: 'left' }}>\n          {contactCardTitle}\n          <Text\n            type=\"secondary\"\n            style={{ fontSize: '12px', paddingLeft: '5px' }}\n          >\n            {contactCardTitleSecondary}\n          </Text>\n        </Link>\n      </NavLink>\n\n      <Divider dashed style={{ margin: '12px 0' }} />\n\n      <ul className={contactCardContactsList}>\n        <li className={contactCardContactsItem}>\n          <Text copyable={{ text: contactCardEmail }} style={{ paddingRight: '8px' }} ellipsis={{ rows: 1 }} />\n          <a href={`mailto:${contactCardEmail}`}>{contactCardEmail}</a>\n        </li>\n        <li className={contactCardContactsItem}>\n          <Text copyable={{ text: contactCardPhone }} style={{ paddingRight: '8px' }} />\n          <a href={`tel:${contactCardPhone}`}>{contactCardPhone}</a>\n        </li>\n        <li className={contactCardContactsItem}>\n          <Text\n            copyable={{\n              text: `[${contactCardLocationCountry}] ${contactCardLocation}`,\n            }}\n            style={{ paddingRight: '8px' }}\n          />\n          <Text strong className={contactCardSecondaryColor}>{`/${contactCardLocationCountry}/`}</Text>\n          <br />\n          <span className={contactCardSecondaryColor}>{contactCardLocation}</span>\n        </li>\n      </ul>\n\n      <Divider dashed style={{ margin: '12px 0' }} />\n      <NationalityTag userNationality={contactCardNationality} />\n    </Card>\n\n  );\n}\n\nContactCard.propTypes = {\n  url: PropTypes.string.isRequired,\n  id: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]).isRequired,\n  contactCardImage: PropTypes.string,\n  contactCardTitle: PropTypes.string,\n  contactCardTitleSecondary: PropTypes.string,\n  contactCardEmail: PropTypes.string,\n  contactCardPhone: PropTypes.string,\n  contactCardLocation: PropTypes.string,\n  contactCardLocationCountry: PropTypes.string,\n  contactCardNationality: PropTypes.string,\n};\n\nContactCard.defaultProps = {\n  contactCardImage: '',\n  contactCardTitle: 'Card title',\n  contactCardTitleSecondary: 'title secondary',\n  contactCardEmail: 'mail@example.com',\n  contactCardPhone: '1234567',\n  contactCardLocation: 'Earth',\n  contactCardLocationCountry: 'USA',\n  contactCardNationality: 'Geek',\n};\n\nexport default ContactCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Spin } from 'antd';\nimport { useRouteMatch } from 'react-router-dom';\n\nimport ContactCard from '../contact-card/ContactCard';\nimport generateKey from '../../utils/generateKey';\n\nfunction TiledView({\n  contactsCollection, isLoading,\n}) {\n  const { url } = useRouteMatch();\n\n  if (isLoading) {\n    return (\n      <Spin />\n    );\n  }\n\n  return (\n    <>\n      {contactsCollection.map((contact, item) => (\n        <ContactCard\n          key={generateKey()}\n          url={url}\n          id={item + 1}\n          contactCardImage={contact.picture.medium}\n          contactCardTitle={`${contact.name.title}. ${contact.name.first} ${contact.name.last}`}\n          contactCardTitleSecondary={`(${contact.dob.age} years)`}\n          contactCardEmail={contact.email}\n          contactCardPhone={contact.phone}\n          contactCardLocationCountry={contact.location.country}\n          contactCardLocation={\n            `${contact.location.street.number}\n                ${contact.location.street.name},\n                ${contact.location.city},\n                ${contact.location.state}\n                ${contact.location.postcode}`\n          }\n          contactCardNationality={contact.nat}\n        />\n      ))}\n    </>\n  );\n}\n\nTiledView.propTypes = {\n  contactsCollection: PropTypes.arrayOf(PropTypes.object),\n  isLoading: PropTypes.bool.isRequired,\n};\n\nTiledView.defaultProps = {\n  contactsCollection: [{}],\n};\n\nexport default TiledView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Row,\n  Col,\n  Typography,\n} from 'antd';\n\nimport NATIONALITIES from '../../constants/nationalities';\nimport useWindowDimensions from '../../hooks/useWindowDimensions';\nimport generateKey from '../../utils/generateKey';\n\nfunction StatisticBlock({ contactsData }) {\n  const { Text } = Typography;\n\n  const { width } = useWindowDimensions();\n  const mobileViewportBreakpoint = 620;\n\n  return (\n    <Row gutter={[16, 14]} justify=\"start\" style={{ width: '90%' }}>\n      {\n        Object.keys(NATIONALITIES).map((nationality, item) => {\n          const nationalityName = Object.values(NATIONALITIES)[item].name;\n          const nationalityAmount = contactsData.filter((contact) => contact.nat === nationality);\n\n          return (\n            <Col\n              key={generateKey()}\n              className=\"gutter-row\"\n              span={width >= mobileViewportBreakpoint ? 4 : 12}\n              style={{ textAlign: 'left' }}\n            >\n              <Text strong>\n                {nationalityName}\n                :\n                {' '}\n              </Text>\n              <Text type=\"secondary\" ellipsis>\n                {nationalityAmount.length}\n                {' '}\n                {nationalityAmount.length === 1 ? 'contact' : 'contacts'}\n              </Text>\n            </Col>\n          );\n        })\n      }\n    </Row>\n  );\n}\n\nStatisticBlock.propTypes = {\n  contactsData: PropTypes.arrayOf(PropTypes.object),\n};\n\nStatisticBlock.defaultProps = {\n  contactsData: [{}],\n};\n\nexport default StatisticBlock;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Layout,\n  Row,\n  Col,\n  Typography,\n  Pagination,\n  Statistic,\n  Space,\n  Button,\n  Tooltip,\n} from 'antd';\nimport {\n  ReloadOutlined, AppstoreOutlined, BarsOutlined,\n} from '@ant-design/icons';\nimport classNames from 'classnames';\n\nimport ContactsSearchFilterFormContainer from '../../components/forms/contactsSearchFilterFormContainer';\nimport TableView from '../../components/contacts-views/TableView';\nimport TiledView from '../../components/contacts-views/TiledView';\nimport StatisticBlock from '../../components/statistic/StatisticBlock';\n\nimport 'antd/dist/antd.css';\nimport './ContactsPage.css';\n\nfunction ContactsPage({\n  contactsCollection,\n  isLoading,\n  isTiledView,\n  isTableView,\n  handleTiledView,\n  handleTabularView,\n  collectionSize,\n  malesAmount,\n  femalesAmount,\n  indeterminateAmount,\n  contactsPerPage,\n  currentPage,\n  defaultCurrentPage,\n  handlePaginate,\n  handleFetchContacts,\n}) {\n  const { Content } = Layout;\n\n  const { Title, Text } = Typography;\n  const serviceContainer = classNames('ContactsPage-serviceContainer');\n  const viewSwitcherButton = classNames('ViewSwitcherButton');\n\n  const onContactsUpdate = () => {\n    handleFetchContacts();\n  };\n\n  const handleChange = (number, contactsAmount) => {\n    handlePaginate(number, contactsAmount);\n  };\n\n  // Get current contacts\n  const indexOfLastContact = currentPage * contactsPerPage;\n  const indexOfFirstContact = indexOfLastContact - contactsPerPage;\n  const currentContacts = contactsCollection.slice(indexOfFirstContact, indexOfLastContact);\n\n  return (\n    <Content>\n      <div className=\"ContactsPage\">\n        <div className=\"ContactsPage-header\">\n          <Title level={1} style={{ fontSize: '32px' }}>Contacts</Title>\n          <div>\n            <Tooltip title=\"Update data\">\n              <Button\n                shape=\"circle-outline\"\n                type=\"dashed\"\n                icon={<ReloadOutlined />}\n                style={{ marginRight: '8px' }}\n                onClick={onContactsUpdate}\n                loading={isLoading}\n              />\n            </Tooltip>\n\n            <Tooltip title=\"Tiled view\">\n              <Button\n                type={isTiledView ? 'primary' : 'default'}\n                icon={<AppstoreOutlined />}\n                className={viewSwitcherButton}\n                onClick={handleTiledView}\n              />\n            </Tooltip>\n\n            <Tooltip title=\"Tabular view\">\n              <Button\n                type={isTableView ? 'primary' : 'default'}\n                icon={<BarsOutlined />}\n                className={viewSwitcherButton}\n                onClick={handleTabularView}\n              />\n            </Tooltip>\n          </div>\n        </div>\n\n        <Space style={{\n          backgroundColor: '#fafafa', width: '100%', padding: '10px', marginBottom: '15px',\n        }}\n        >\n          <div className={serviceContainer}>\n            <ContactsSearchFilterFormContainer active />\n          </div>\n        </Space>\n\n        {isTableView ? (\n          <TableView contactsCollection={currentContacts} isLoading={isLoading} />\n        ) : (\n          <Row justify=\"space-between\">\n            <TiledView contactsCollection={currentContacts} isLoading={isLoading} />\n          </Row>\n        )}\n\n        <Space style={{\n          backgroundColor: '#fafafa', width: '100%', padding: '10px', marginBottom: '15px',\n        }}\n        >\n          <div className={serviceContainer}>\n            <Title level={2}>Statistic</Title>\n            <Row gutter={16}>\n              <Col>\n                <Statistic title=\"Collection size\" value={collectionSize} />\n              </Col>\n              <Col>\n                <Statistic title=\"Males\" value={malesAmount} />\n              </Col>\n              <Col>\n                <Statistic title=\"Females\" value={femalesAmount} />\n              </Col>\n              <Col>\n                <Statistic title=\"Indeterminate\" value={indeterminateAmount} />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                {malesAmount > femalesAmount\n                  ? <Text mark>Men predominate</Text> : <Text mark>Women predominate</Text>}\n\n              </Col>\n            </Row>\n            <Text type=\"secondary\">Nationalities</Text>\n            <StatisticBlock\n              contactsData={contactsCollection}\n            />\n          </div>\n        </Space>\n\n        <Pagination\n          size=\"small\"\n          defaultCurrent={defaultCurrentPage}\n          total={collectionSize}\n          defaultPageSize={contactsPerPage}\n          showSizeChanger\n          onChange={handleChange}\n        />\n      </div>\n\n    </Content>\n  );\n}\n\nContactsPage.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  handleFetchContacts: PropTypes.func.isRequired,\n  handleTiledView: PropTypes.func.isRequired,\n  handleTabularView: PropTypes.func.isRequired,\n  handlePaginate: PropTypes.func.isRequired,\n  contactsCollection: PropTypes.arrayOf(PropTypes.object),\n  isTableView: PropTypes.bool,\n  isTiledView: PropTypes.bool,\n  collectionSize: PropTypes.number,\n  malesAmount: PropTypes.number,\n  femalesAmount: PropTypes.number,\n  indeterminateAmount: PropTypes.number,\n  contactsPerPage: PropTypes.number,\n  currentPage: PropTypes.number,\n  defaultCurrentPage: PropTypes.number,\n};\n\nContactsPage.defaultProps = {\n  contactsCollection: [{}],\n  isTableView: true,\n  isTiledView: false,\n  collectionSize: 0,\n  malesAmount: 0,\n  femalesAmount: 0,\n  indeterminateAmount: 0,\n  contactsPerPage: 10,\n  currentPage: 1,\n  defaultCurrentPage: 1,\n};\n\nexport default ContactsPage;\n","import { connect } from 'react-redux';\nimport {\n  fetchContacts,\n  setTiledView,\n  setTableView,\n  paginate,\n} from '../../actions/contactsPage';\nimport ContactsPage from './ContactsPage';\n\nconst mapStateToProps = ({ contacts }) => {\n  const {\n    contactsCollection,\n    collectionLength,\n    males,\n    females,\n    indeterminate,\n    isLoading,\n    isTableView,\n    isTiledView,\n    contactsPerPage,\n    currentPage,\n  } = contacts;\n\n  return {\n    contactsCollection,\n    isLoading,\n    isTableView,\n    isTiledView,\n    contactsPerPage,\n    currentPage,\n    collectionSize: collectionLength,\n    malesAmount: males,\n    femalesAmount: females,\n    indeterminateAmount: indeterminate,\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    handleFetchContacts: () => dispatch(fetchContacts()),\n    handleTiledView: () => dispatch(setTiledView()),\n    handleTabularView: () => dispatch(setTableView()),\n    handlePaginate: (number, contactsPerPage) => dispatch(paginate(number, contactsPerPage)),\n  };\n}\n\nconst ContactsPageContainer = connect(mapStateToProps, mapDispatchToProps)(ContactsPage);\n\nexport default ContactsPageContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useRouteMatch } from 'react-router-dom';\nimport classNames from 'classnames';\nimport {\n  Layout, Typography, Divider, Button, Spin,\n} from 'antd';\nimport { DoubleLeftOutlined } from '@ant-design/icons';\n\nimport AppImage from '../../components/image/AppImage';\nimport NationalityTag from '../../components/nationality-tag/NationalityTag';\n\nimport 'antd/dist/antd.css';\nimport './ContactProfilePage.css';\n\nfunction ContactProfilePage({ handleClick, isLoading, contactsCollection }) {\n  const { Content } = Layout;\n  const { Title, Text } = Typography;\n\n  const contactProfilePage = classNames('ContactProfile');\n  const contactProfileBody = classNames('ContactProfile-body');\n  const contactProfileImage = classNames('ContactProfile-contactImage');\n  const contactProfileInfo = classNames('ContactProfile-contactInfo');\n  const contactContactsList = classNames('ContactProfile-contactContactsList');\n  const contactContactsItem = classNames('ContactProfile-contactContactsItem');\n\n  const match = useRouteMatch();\n  const { params: { contactId } } = match;\n\n  const contactProfile = contactsCollection[contactId - 1];\n\n  if (isLoading) {\n    return (\n      <Spin />\n    );\n  }\n\n  return (\n    <Content>\n      <div className={contactProfilePage}>\n        <Title level={1} style={{ fontSize: '32px' }}>Contact View</Title>\n        <div className={contactProfileBody}>\n          <AppImage className={contactProfileImage} src={contactProfile.picture.medium} />\n          <div className={contactProfileInfo}>\n            <Title level={3}>\n              {`${contactProfile.name.title}. ${contactProfile.name.first} ${contactProfile.name.last}`}\n              <Text\n                type=\"secondary\"\n                style={{ fontSize: '19px', paddingLeft: '5px' }}\n              >\n                {`(${contactProfile.dob.age} years)`}\n              </Text>\n            </Title>\n            <Divider dashed style={{ margin: '12px 0' }} />\n\n            <ul className={contactContactsList}>\n              <li className={contactContactsItem}>\n                <Text copyable={{ text: contactProfile.email }} style={{ paddingRight: '8px' }} />\n                <a href={`mailto:${contactProfile.email}`}>{contactProfile.email}</a>\n              </li>\n              <li className={contactContactsItem}>\n                <Text copyable={{ text: contactProfile.phone }} style={{ paddingRight: '8px' }} />\n                <a href={`tel:${contactProfile.phone}`}>{contactProfile.phone}</a>\n              </li>\n              <li className={contactContactsItem}>\n                <Text\n                  copyable={{\n                    text: `[${contactProfile.location.country}]\n                             ${contactProfile.location.street.number}\n                             ${contactProfile.location.street.name},\n                             ${contactProfile.location.city},\n                             ${contactProfile.location.state}\n                             ${contactProfile.location.postcode}`,\n                  }}\n                  style={{ paddingRight: '8px' }}\n                />\n                <Text strong style={{ color: '#5b5b6b' }}>{`/${contactProfile.location.country}/`}</Text>\n                <br />\n                {' '}\n                <Text type=\"secondary\" style={{ color: '#5b5b6b' }} ellipsis>\n                  {`${contactProfile.location.street.number}\n                      ${contactProfile.location.street.name},\n                      ${contactProfile.location.city},\n                      ${contactProfile.location.state}\n                      ${contactProfile.location.postcode}`}\n                </Text>\n              </li>\n            </ul>\n\n            <Divider dashed style={{ margin: '12px 0' }} />\n            <NationalityTag userNationality={contactProfile.nat} />\n          </div>\n        </div>\n      </div>\n\n      <Button\n        type=\"primary\"\n        onClick={handleClick}\n        icon={<DoubleLeftOutlined />}\n        style={{ marginTop: 15 }}\n      >\n        Back\n      </Button>\n\n    </Content>\n  );\n}\n\nContactProfilePage.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool,\n  contactsCollection: PropTypes.arrayOf(PropTypes.shape({\n    gender: PropTypes.string,\n    name: {\n      title: PropTypes.string,\n      first: PropTypes.string,\n      last: PropTypes.string,\n    },\n    location: {\n      street: {\n        number: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        name: PropTypes.string,\n      },\n      city: PropTypes.string,\n      state: PropTypes.string,\n      postcode: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      coordinates: {\n        latitude: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        longitude: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      },\n      timezone: {\n        offset: PropTypes.string,\n        description: PropTypes.string,\n      },\n    },\n    email: PropTypes.string,\n    login: {\n      uuid: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      username: PropTypes.string,\n      password: PropTypes.string,\n      salt: PropTypes.string,\n      md5: PropTypes.string,\n      sha1: PropTypes.string,\n      sha256: PropTypes.string,\n    },\n    dob: {\n      date: PropTypes.string,\n      age: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    },\n    registered: {\n      date: PropTypes.string,\n      age: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    },\n    phone: PropTypes.string,\n    cell: PropTypes.string,\n    id: {\n      name: PropTypes.string,\n      value: PropTypes.string,\n    },\n    picture: {\n      large: PropTypes.string,\n      medium: PropTypes.string,\n      thumbnail: PropTypes.string,\n    },\n    nat: PropTypes.string,\n  })),\n};\n\nContactProfilePage.defaultProps = {\n  isLoading: false,\n  contactsCollection: [\n    {\n      gender: 'male',\n      name: {\n        title: 'mr',\n        first: 'brad',\n        last: 'gibson',\n      },\n      location: {\n        street: { number: 5421, name: 'Avenue Paul Eluard' },\n        city: 'kilcoole',\n        state: 'waterford',\n        postcode: '93027',\n        coordinates: {\n          latitude: '20.9267',\n          longitude: '-7.9310',\n        },\n        timezone: {\n          offset: '-3:30',\n          description: 'Newfoundland',\n        },\n      },\n      email: 'brad.gibson@example.com',\n      login: {\n        uuid: '155e77ee-ba6d-486f-95ce-0e0c0fb4b919',\n        username: 'silverswan131',\n        password: 'firewall',\n        salt: 'TQA1Gz7x',\n        md5: 'dc523cb313b63dfe5be2140b0c05b3bc',\n        sha1: '7a4aa07d1bedcc6bcf4b7f8856643492c191540d',\n        sha256: '74364e96174afa7d17ee52dd2c9c7a4651fe1254f471a78bda0190135dcd3480',\n      },\n      dob: {\n        date: '1993-07-20T09:44:18.674Z',\n        age: 26,\n      },\n      registered: {\n        date: '2002-05-21T10:59:49.966Z',\n        age: 17,\n      },\n      phone: '011-962-7516',\n      cell: '081-454-0666',\n      id: {\n        name: 'PPS',\n        value: '0390511T',\n      },\n      picture: {\n        large: 'https://randomuser.me/api/portraits/men/75.jpg',\n        medium: 'https://randomuser.me/api/portraits/med/men/75.jpg',\n        thumbnail: 'https://randomuser.me/api/portraits/thumb/men/75.jpg',\n      },\n      nat: 'IE',\n    },\n  ],\n};\n\nexport default ContactProfilePage;\n","import { connect } from 'react-redux';\nimport { backToContacts } from '../../actions/contactsPage';\nimport ContactProfilePage from './ContactProfilePage';\n\nfunction mapStateToProps({ contacts }) {\n  const { contactsCollection, isContactProfileLoading } = contacts;\n  return {\n    contactsCollection,\n    isLoading: isContactProfileLoading,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    handleClick: () => dispatch(backToContacts()),\n  };\n}\n\nconst ContactProfilePageContainer = connect(mapStateToProps, mapDispatchToProps)(ContactProfilePage);\n\nexport default ContactProfilePageContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Layout, Typography, Button } from 'antd';\nimport classNames from 'classnames';\n\nimport './Page404.css';\n\nfunction Page404({ handleClick }) {\n  const { Content } = Layout;\n  const { Text } = Typography;\n\n  const page404 = classNames('Page404');\n\n  return (\n    <Content>\n      <div className={page404}>\n        <Text type=\"danger\" style={{ fontSize: '78px', fontWeight: 700 }}>404</Text>\n        <h1>Requested page not found!</h1>\n        <div>\n          <Button type=\"primary\" onClick={handleClick}>Back to home</Button>\n        </div>\n      </div>\n    </Content>\n  );\n}\n\nPage404.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport default Page404;\n","import { connect } from 'react-redux';\nimport { goHome } from '../../actions/userProfile';\nimport Page404 from './Page404';\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    handleClick: () => dispatch(goHome()),\n  };\n}\n\nconst Page404Container = connect(null, mapDispatchToProps)(Page404);\n\nexport default Page404Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Layout } from 'antd';\nimport { Route, Switch, Router } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport HeaderContainer from '../../components/header/headerContainer';\nimport SignInFormContainer from '../../components/forms/signInFormContainer';\nimport Footer from '../../components/footer/Footer';\n\nimport HomePage from '../../pages/home/HomePage';\nimport UserProfilePage from '../../pages/user-profile/UserProfilePage';\nimport ContactsPageContainer from '../../pages/contacts/contactsPageContainer';\nimport ContactProfilePageContainer from '../../pages/contact-profile/contactProfilePageContainer';\nimport Page404Container from '../../pages/page-404/page404Container';\n\nimport './BaseAppLayout.css';\n\nfunction BaseAppLayout({ history }) {\n  const layout = classNames('BaseAppLayout');\n\n  return (\n    <Router history={history} basename=\"/\">\n      <Layout className={layout}>\n        <HeaderContainer />\n\n        <SignInFormContainer />\n\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route exact path=\"/profile\" component={UserProfilePage} />\n          <Route exact path=\"/contacts\" component={ContactsPageContainer} />\n          <Route\n            exact\n            path=\"/contacts/:contactId\"\n            render={() => <ContactProfilePageContainer />}\n          />\n          <Route exact path=\"*\" component={Page404Container} />\n        </Switch>\n\n        <Footer />\n      </Layout>\n    </Router>\n  );\n}\n\nBaseAppLayout.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n};\n\nexport default BaseAppLayout;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\n\nimport store, { history } from './store/store';\nimport BaseAppLayout from './layouts/base/BaseAppLayout';\n\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <BaseAppLayout history={history} />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}